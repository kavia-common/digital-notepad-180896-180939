{"is_source_file": true, "format": "Python", "description": "This file defines API views for a Note model, including a health check endpoint and a ViewSet for CRUD operations, with Swagger documentation annotations.", "external_files": ["rest_framework.decorators", "rest_framework.response", "rest_framework", "drf_yasg.utils", "drf_yasg", ".models", ".serializers"], "external_methods": ["api_view", "Response", "viewsets.ModelViewSet", "status", "AllowAny", "swagger_auto_schema", "openapi"], "published": ["health", "NoteViewSet"], "classes": [{"name": "NoteViewSet", "description": "A Django REST Framework ModelViewSet for performing CRUD operations on Note objects, including Swagger schema annotations."}], "methods": [{"name": "health(request)", "description": "A simple health check endpoint that returns a message indicating the server is running.", "scope": "", "scopeKind": ""}, {"name": "list(self, request, *args, **kwargs)", "description": "Retrieves a paginated list of notes ordered by creation date descending.", "scope": "NoteViewSet", "scopeKind": "class"}, {"name": "create(self, request, *args, **kwargs)", "description": "Creates a new Note instance with provided data.", "scope": "NoteViewSet", "scopeKind": "class"}, {"name": "retrieve(self, request, *args, **kwargs)", "description": "Retrieves a single Note by its ID.", "scope": "NoteViewSet", "scopeKind": "class"}, {"name": "update(self, request, *args, **kwargs)", "description": "Replaces an existing Note with new data.", "scope": "NoteViewSet", "scopeKind": "class"}, {"name": "partial_update(self, request, *args, **kwargs)", "description": "Partially updates fields of an existing Note.", "scope": "NoteViewSet", "scopeKind": "class"}, {"name": "destroy(self, request, *args, **kwargs)", "description": "Deletes a Note by its ID.", "scope": "NoteViewSet", "scopeKind": "class"}], "calls": ["super().list", "super().create", "super().retrieve", "super().update", "super().partial_update", "super().destroy"], "search-terms": ["NoteViewSet", "health endpoint", "CRUD Notes", "Swagger annotations", "DRF ViewSet", "Notes API"], "state": 2, "file_id": 7, "knowledge_revision": 41, "git_revision": "87302d5ccec53eba78bd11e71d4f7224eabfce26", "revision_history": [{"22": "87302d5ccec53eba78bd11e71d4f7224eabfce26"}, {"41": "87302d5ccec53eba78bd11e71d4f7224eabfce26"}], "ctags": [{"_type": "tag", "name": "NoteViewSet", "path": "/home/kavia/workspace/code-generation/digital-notepad-180896-180939/notes_backend/api/views.py", "pattern": "/^class NoteViewSet(viewsets.ModelViewSet):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/digital-notepad-180896-180939/notes_backend/api/views.py", "pattern": "/^    def create(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "NoteViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "destroy", "path": "/home/kavia/workspace/code-generation/digital-notepad-180896-180939/notes_backend/api/views.py", "pattern": "/^    def destroy(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "NoteViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "health", "path": "/home/kavia/workspace/code-generation/digital-notepad-180896-180939/notes_backend/api/views.py", "pattern": "/^def health(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/digital-notepad-180896-180939/notes_backend/api/views.py", "pattern": "/^    def list(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "NoteViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "partial_update", "path": "/home/kavia/workspace/code-generation/digital-notepad-180896-180939/notes_backend/api/views.py", "pattern": "/^    def partial_update(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "NoteViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "permission_classes", "path": "/home/kavia/workspace/code-generation/digital-notepad-180896-180939/notes_backend/api/views.py", "pattern": "/^    permission_classes = [AllowAny]$/", "language": "Python", "kind": "variable", "scope": "NoteViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "queryset", "path": "/home/kavia/workspace/code-generation/digital-notepad-180896-180939/notes_backend/api/views.py", "pattern": "/^    queryset = Note.objects.all().order_by(\"-created_at\")$/", "language": "Python", "kind": "variable", "scope": "NoteViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "retrieve", "path": "/home/kavia/workspace/code-generation/digital-notepad-180896-180939/notes_backend/api/views.py", "pattern": "/^    def retrieve(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "NoteViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "serializer_class", "path": "/home/kavia/workspace/code-generation/digital-notepad-180896-180939/notes_backend/api/views.py", "pattern": "/^    serializer_class = NoteSerializer$/", "language": "Python", "kind": "variable", "scope": "NoteViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/digital-notepad-180896-180939/notes_backend/api/views.py", "pattern": "/^    def update(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "NoteViewSet", "scopeKind": "class"}], "hash": "07ddd5e2e5349f6a73055825d4a7581d", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/api/views.py", "fields": [{"name": "permission_classes = [AllowAny]", "scope": "NoteViewSet", "scopeKind": "class", "description": "unavailable"}, {"name": "queryset = Note.objects.all().order_by(\"-created_at\")", "scope": "NoteViewSet", "scopeKind": "class", "description": "unavailable"}, {"name": "serializer_class = NoteSerializer", "scope": "NoteViewSet", "scopeKind": "class", "description": "unavailable"}]}